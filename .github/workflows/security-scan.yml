name: Security Scan

on:
  schedule:
    - cron: '0 0 * * 0'  # Executa todo domingo à meia-noite
  workflow_dispatch:  # Permite execução manual

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          load: true
          tags: local/ms-gf-product-service-v1:security-scan

      # Verificação de vulnerabilidades na imagem
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'local/ms-gf-product-service-v1:security-scan'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'

      # Publicar resultados de segurança no GitHub Security
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      # Verificação de dependências com OWASP Dependency Check
      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'ms-gf-product-service-v1'
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: >
            --failOnCVSS 7
            --enableRetired

      # Upload do relatório como artefato
      - name: Upload dependency check report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports/
